{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","type","name","pattern","required","value","handleChange","handleBlur","htmlFor","toUpperCase","slice","id","placeholder","onChange","onBlur","NewMovie","patternUrl","state","event","target","setState","trim","handleSubmit","preventDefault","props","addMovie","this","onSubmit","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.afc330dd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Input = (\n  { type,\n    name,\n    pattern,\n    required,\n    title,\n    value,\n    handleChange,\n    handleBlur },\n) => (\n  <div className=\"field\">\n    <label htmlFor={name} className=\"label\">\n      {name[0].toUpperCase() + name.slice(1)}\n    </label>\n    <div>\n      <input\n        className=\"input\"\n        type={type}\n        name={name}\n        id={name}\n        placeholder={name}\n        title={title}\n        pattern={pattern}\n        required={required}\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n      />\n    </div>\n  </div>\n);\n\nInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  required: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  handleBlur: PropTypes.func,\n};\n\nInput.defaultProps = {\n  type: 'text',\n  pattern: '.+',\n  required: true,\n  title: ``,\n  handleBlur: () => {},\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Input } from '../Input/Input';\n\nexport class NewMovie extends Component {\n  // eslint-disable-next-line max-len\n  patternUrl = '^((([A-Za-z]{3,9}:(?:\\\\/\\\\/)?)(?:[-;:&=+$,\\\\w]+@)\\n?[A-Za-z0-9.-]+|(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)\\n((?:\\\\/[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@.\\\\w_]*)#?\\n(?:[.!/\\\\\\\\\\\\w]*))?)$';\n\n  state = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  handleBlur = (event) => {\n    const { name } = event.target;\n\n    this.setState(state => ({\n      [name]: state[name].trim(),\n    }));\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    this.props.addMovie(this.state);\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    });\n  }\n\n  render() {\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <Input\n          name=\"title\"\n          value={title}\n          handleChange={this.handleChange}\n          handleBlur={this.handleBlur}\n        />\n        <Input\n          name=\"description\"\n          value={description}\n          required={false}\n          handleChange={this.handleChange}\n          handleBlur={this.handleBlur}\n        />\n        <Input\n          name=\"imgUrl\"\n          pattern={this.patternUrl}\n          value={imgUrl}\n          handleChange={this.handleChange}\n        />\n        <Input\n          name=\"imdbUrl\"\n          pattern={this.patternUrl}\n          value={imdbUrl}\n          handleChange={this.handleChange}\n        />\n        <Input\n          name=\"imdbId\"\n          value={imdbId}\n          pattern=\"tt\\d{7}\"\n          title=\"Enter 7 digits\"\n          handleChange={this.handleChange}\n          handleBlur={() => {\n            this.setState(state => ({\n              imdbId: `tt${state.imdbId}`,\n            }));\n          }}\n        />\n        <button type=\"submit\" className=\"button is-link\">\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}