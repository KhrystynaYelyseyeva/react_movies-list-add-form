{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Input/Input.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","Input","props","htmlFor","name","toUpperCase","slice","id","placeholder","type","pattern","required","onBlur","initialState","titleError","imgUrlError","imdbUrlError","imdbIdError","patternUrl","NewMovie","state","handleChange","event","target","value","errorKey","setState","handleBlur","stateIs","trim","urlFormat","test","match","idFormat","handleSubmit","preventDefault","addMovie","this","error","onSubmit","onChange","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2d979f7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Input = props => (\n  <div className=\"field\">\n    <label htmlFor={props.name} className=\"label\">\n      {props.name[0].toUpperCase() + props.name.slice(1)}\n    </label>\n    <div>\n      <input\n        {...props}\n        className=\"input\"\n        id={props.name}\n        placeholder={props.name}\n      />\n    </div>\n  </div>\n);\n\nInput.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  pattern: PropTypes.string,\n  title: PropTypes.string,\n  required: PropTypes.bool,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func,\n};\n\nInput.defaultProps = {\n  type: 'text',\n  pattern: '.+',\n  required: true,\n  title: ``,\n  onBlur: () => {},\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Input } from '../Input/Input';\nimport './NewMovie.scss';\n\nconst initialState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n  titleError: false,\n  imgUrlError: false,\n  imdbUrlError: false,\n  imdbIdError: false,\n};\n\n// eslint-disable-next-line max-len\nconst patternUrl = '^((([A-Za-z]{3,9}:(?:\\\\/\\\\/)?)(?:[-;:&=+$,\\\\w]+@)\\n?[A-Za-z0-9.-]+|(?:www\\\\.|[-;:&=+$,\\\\w]+@)[A-Za-z0-9.-]+)\\n((?:\\\\/[+~%/.\\\\w-_]*)?\\\\??(?:[-+=&;%@.\\\\w_]*)#?\\n(?:[.!/\\\\\\\\\\\\w]*))?)$';\nconst patternId = 'tt\\\\d{7}';\n\nexport class NewMovie extends Component {\n  state = { ...initialState };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    const errorKey = `${name}Error`;\n\n    this.setState({\n      [name]: value,\n      [errorKey]: false,\n    });\n  }\n\n  handleBlur = (event) => {\n    const { name } = event.target;\n    const errorKey = `${name}Error`;\n\n    this.setState((state) => {\n      const stateIs = !state[name].trim();\n      const urlFormat = /Url/.test(name) && !state[name].match(patternUrl);\n      const idFormat = name === 'imdbId' && !state[name].match(patternId);\n\n      if (stateIs || urlFormat || idFormat) {\n        return ({\n          [errorKey]: true,\n        });\n      }\n\n      return ({\n        [errorKey]: false,\n      });\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError } = this.state;\n\n    if (titleError || imgUrlError || imdbUrlError || imdbIdError) {\n      return;\n    }\n\n    this.props.addMovie(this.state);\n    this.setState({ ...initialState });\n  }\n\n  render() {\n    const { title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError } = this.state;\n\n    const error = titleError || imgUrlError || imdbUrlError || imdbIdError;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        {error && <div className=\"error\">Not valid input</div> }\n        <Input\n          name=\"title\"\n          value={title}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n        />\n        <Input\n          name=\"description\"\n          value={description}\n          required={false}\n          onChange={this.handleChange}\n        />\n        <Input\n          name=\"imgUrl\"\n          value={imgUrl}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n        />\n        <Input\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n        />\n        <Input\n          name=\"imdbId\"\n          value={imdbId}\n          title=\"Enter 7 digits\"\n          onChange={this.handleChange}\n          onBlur={this.handleBlur}\n        />\n        <button type=\"submit\" className=\"button is-link\">\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(state => ({\n      movies: [...state.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}